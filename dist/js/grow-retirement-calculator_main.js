var calculator=new Vue({el:"#calculator",data:{currentAge:"",retirementAge:"",baseSalary:"",savingsYesNo:"",currentSavings:"",annualGrowth:"",retirementIncome:"",totalNeeded:"",A:"",saveAmount:"",percentOfSalary:"",ageAdjusted:"",incomeAdjusted:"",seen:!1,showResults:!1,showError:!1,showAgeError:!1,showExpectations:!0},computed:{},methods:{savingsGoal:function(){this.currentAge&&this.retirementAge&&this.baseSalary&&this.annualGrowth&&this.retirementIncome?(this.showResults=!0,this.showError=!1):(this.showError=!0,this.showResults=!1),this.currentAge>this.retirementAge&&(this.showResults=!1,this.showAgeError=!0),"no"==this.savingsYesNo&&this.currentSavings;let t=this.currentSavings,e=this.annualGrowth,s=this.retirementAge-this.currentAge;tW=(54-this.currentAge)/s,tW2=(this.retirementAge-54)/s,console.log("tW: "+tW+" tW2: "+tW2);let i=.03*tW+.015*tW2+1;console.log("weighted average: "+i);let o=Math.pow(i,s)*this.baseSalary,r=90-this.retirementAge;console.log("final salary: "+o),this.totalNeeded=o*this.retirementIncome*r,"yes"==this.savingsYesNo&&(this.A=t*Math.pow(1+e/12,12*s),console.log("A: "+this.A),this.totalNeeded=this.totalNeeded-this.A,console.log("Total needed adjusted: "+this.totalNeeded)),console.log(s);let n=this.totalNeeded*(e/12)/(Math.pow(1+e/12,12*s)-1);this.percentOfSalary=Math.round(n/(this.baseSalary/12)*100),n=n.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0}),console.log("Payment: "+n),this.saveAmount="$"+n,this.adjustForAge(t,e),this.adjustForIncome(t,e,o,s,r)},adjustForAge:function(t,e){if("70"==this.retirementAge&&".70"==this.retirementIncome)this.showExpectations=!1;else if("70"!==this.retirementAge){let s=70-this.currentAge,i=Math.pow(1.02,s)*this.baseSalary*this.retirementIncome*20;if("yes"==this.savingsYesNo){i-=t*Math.pow(1+e/12,12*s)}let o=i*(e/12)/(Math.pow(1+e/12,12*s)-1);o=o.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0}),this.ageAdjusted="If you wait until age 70 to retire, your required monthly savings go down to $"+o+"."}else"70"==this.retirementAge&&(this.ageAdjusted=" ")},adjustForIncome:function(t,e,s,i,o){if(".70"!==this.retirementIncome){let r=.7*s*o;if("yes"==this.savingsYesNo){r-=t*Math.pow(1+e/12,12*i)}let n=r*(e/12)/(Math.pow(1+e/12,12*i)-1);n=n.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0}),this.incomeAdjusted="If you can live on a tighter budget in retirement by adjusting your needs to 70% of your final salary, you only need to save $"+n+" per month"}else this.incomeAdjusted=""}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
