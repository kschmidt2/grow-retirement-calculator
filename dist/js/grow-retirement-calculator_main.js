var calculator=new Vue({el:"#calculator",data:{currentAge:"31",retirementAge:"67",baseSalary:"50000",savingsYesNo:"yes",currentSavings:"10000",annualGrowth:".105",retirementIncome:".75",socialSecurity:"",totalNeeded:"",saveAmount:"",percentOfSalary:"",seen:!1,adjustForAge:"",adjustForIncome:""},computed:{savingsGoal:function(){"no"==this.savingsYesNo&&this.currentSavings,console.log(this.savingsYesNo),console.log(this.currentSavings);let e=this.currentSavings,t=this.annualGrowth,o=this.retirementAge-this.currentAge;console.log("t: "+o);let s=Math.pow(1.02,o)*this.baseSalary,a=90-this.retirementAge;if(console.log("Retirement salary: "+s),this.totalNeeded=s*this.retirementIncome*a,console.log("Total needed: "+this.totalNeeded),"yes"==this.savingsYesNo){let s=e*Math.pow(1+t/12,12*o);console.log("A: "+s),this.totalNeeded=this.totalNeeded-s,console.log("Total needed adjusted: "+this.totalNeeded)}let n=this.totalNeeded*(t/12)/(Math.pow(1+t/12,12*o)-1);this.percentOfSalary=Math.round(n/(this.baseSalary/12)*100),n=n.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0}),console.log("Payment: "+n);let i="$"+n;return function(){console.log(this.retirementAge),"70"!==this.retirementAge?(o=70-this.currentAge,this.adjustForAge="$XXX",console.log(this.adjustForAge)):"70"==this.retirementAge&&(this.adjustForAge="Hello",console.log(this.adjustForAge))}(),i}},methods:{adjustForAge:function(){console.log("adjust for age")}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY2FsY3VsYXRvciIsIlZ1ZSIsImVsIiwiZGF0YSIsImN1cnJlbnRBZ2UiLCJyZXRpcmVtZW50QWdlIiwiYmFzZVNhbGFyeSIsInNhdmluZ3NZZXNObyIsImN1cnJlbnRTYXZpbmdzIiwiYW5udWFsR3Jvd3RoIiwicmV0aXJlbWVudEluY29tZSIsInNvY2lhbFNlY3VyaXR5IiwidG90YWxOZWVkZWQiLCJzYXZlQW1vdW50IiwicGVyY2VudE9mU2FsYXJ5Iiwic2VlbiIsImFkanVzdEZvckFnZSIsImFkanVzdEZvckluY29tZSIsImNvbXB1dGVkIiwic2F2aW5nc0dvYWwiLCJ0aGlzIiwiY29uc29sZSIsImxvZyIsIlAiLCJyIiwidCIsImZpbmFsU2FsYXJ5IiwiTWF0aCIsInBvdyIsInllYXJzTmVlZGVkIiwiQSIsIlBNVCIsInJvdW5kIiwidG9Mb2NhbGVTdHJpbmciLCJ1bmRlZmluZWQiLCJtaW5pbXVtRnJhY3Rpb25EaWdpdHMiLCJtYXhpbXVtRnJhY3Rpb25EaWdpdHMiLCJyZXN1bHRzIiwibWV0aG9kcyJdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBQUEsV0FBQSxJQUFBQyxJQUFBLENBQ0FDLEdBQUEsY0FDQUMsS0FBQSxDQUNBQyxXQUFBLEtBQ0FDLGNBQUEsS0FDQUMsV0FBQSxRQUNBQyxhQUFBLE1BQ0FDLGVBQUEsUUFDQUMsYUFBQSxPQUNBQyxpQkFBQSxNQUNBQyxlQUFBLEdBQ0FDLFlBQUEsR0FDQUMsV0FBQSxHQUNBQyxnQkFBQSxHQUNBQyxNQUFBLEVBQ0FDLGFBQUEsR0FDQUMsZ0JBQUEsSUFFQUMsU0FBQSxDQUVBQyxZQUFBLFdBRUEsTUFBQUMsS0FBQWIsY0FDQWEsS0FBQVosZUFHQWEsUUFBQUMsSUFBQUYsS0FBQWIsY0FFQWMsUUFBQUMsSUFBQUYsS0FBQVosZ0JBRUEsSUFBQWUsRUFBQUgsS0FBQVosZUFDQWdCLEVBQUFKLEtBQUFYLGFBQ0FnQixFQUFBTCxLQUFBZixjQUFBZSxLQUFBaEIsV0FFQWlCLFFBQUFDLElBQUEsTUFBQUcsR0FFQSxJQUFBQyxFQUNBQyxLQUFBQyxJQUFBLEtBQUFILEdBQUFMLEtBQUFkLFdBQ0F1QixFQUFBLEdBQUFULEtBQUFmLGNBU0EsR0FQQWdCLFFBQUFDLElBQUEsc0JBQUFJLEdBRUFOLEtBQUFSLFlBQUFjLEVBQUFOLEtBQUFWLGlCQUFBbUIsRUFFQVIsUUFBQUMsSUFBQSxpQkFBQUYsS0FBQVIsYUFHQSxPQUFBUSxLQUFBYixhQUFBLENBQ0EsSUFBQXVCLEVBQUFQLEVBQUFJLEtBQUFDLElBQUEsRUFBQUosRUFBQSxHQUFBLEdBQUFDLEdBQ0FKLFFBQUFDLElBQUEsTUFBQVEsR0FDQVYsS0FBQVIsWUFBQVEsS0FBQVIsWUFBQWtCLEVBQ0FULFFBQUFDLElBQUEsMEJBQUFGLEtBQUFSLGFBR0EsSUFJQW1CLEVBSkFYLEtBQUFSLGFBQUFZLEVBQUEsS0FFQUcsS0FBQUMsSUFBQSxFQUFBSixFQUFBLEdBQUEsR0FBQUMsR0FBQSxHQUlBTCxLQUFBTixnQkFBQWEsS0FBQUssTUFBQUQsR0FBQVgsS0FBQWQsV0FBQSxJQUFBLEtBRUF5QixFQUFBQSxFQUFBRSxvQkFBQUMsRUFDQSxDQUFBQyxzQkFBQSxFQUFBQyxzQkFBQSxJQUVBZixRQUFBQyxJQUFBLFlBQUFTLEdBRUEsSUFBQU0sRUFBQSxJQUFBTixFQWdCQSxPQWRBLFdBQ0FWLFFBQUFDLElBQUFGLEtBQUFmLGVBQ0EsT0FBQWUsS0FBQWYsZUFDQW9CLEVBQUEsR0FBQUwsS0FBQWhCLFdBQ0FnQixLQUFBSixhQUFBLE9BQ0FLLFFBQUFDLElBQUFGLEtBQUFKLGVBQ0EsTUFBQUksS0FBQWYsZ0JBQ0FlLEtBQUFKLGFBQUEsUUFDQUssUUFBQUMsSUFBQUYsS0FBQUosZUFJQUEsR0FFQXFCLElBSUFDLFFBQUEsQ0FFQXRCLGFBQUEsV0FFQUssUUFBQUMsSUFBQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc2V0VGltZW91dChmdW5jdGlvbigpe1xuICB2YXIgY2FsY3VsYXRvciA9IG5ldyBWdWUoe1xuICAgIGVsOiAnI2NhbGN1bGF0b3InLFxuICAgIGRhdGE6IHtcbiAgICAgIGN1cnJlbnRBZ2U6ICczMScsXG4gICAgICByZXRpcmVtZW50QWdlOiAnNjcnLFxuICAgICAgYmFzZVNhbGFyeTogJzUwMDAwJyxcbiAgICAgIHNhdmluZ3NZZXNObzogJ3llcycsXG4gICAgICBjdXJyZW50U2F2aW5nczogJzEwMDAwJyxcbiAgICAgIGFubnVhbEdyb3d0aDogJy4xMDUnLFxuICAgICAgcmV0aXJlbWVudEluY29tZTogJy43NScsXG4gICAgICBzb2NpYWxTZWN1cml0eTogJycsXG4gICAgICB0b3RhbE5lZWRlZDogJycsXG4gICAgICBzYXZlQW1vdW50OiAnJyxcbiAgICAgIHBlcmNlbnRPZlNhbGFyeTogJycsXG4gICAgICBzZWVuOiBmYWxzZSxcbiAgICAgIGFkanVzdEZvckFnZTogJycsXG4gICAgICBhZGp1c3RGb3JJbmNvbWU6ICcnXG4gICAgfSxcbiAgICBjb21wdXRlZDoge1xuICAgICAgLy8gY2FsY3VsYXRvciBtYXRoIGdvZXMgaGVyZVxuICAgICAgc2F2aW5nc0dvYWw6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGlmICh0aGlzLnNhdmluZ3NZZXNObyA9PSAnbm8nKSB7XG4gICAgICAgICAgdGhpcy5jdXJyZW50U2F2aW5ncyA9PT0gJzAnO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zYXZpbmdzWWVzTm8pXG5cbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jdXJyZW50U2F2aW5ncyk7XG4gICAgICBcbiAgICAgICAgbGV0IFAgPSB0aGlzLmN1cnJlbnRTYXZpbmdzLFxuICAgICAgICAgICAgciA9IHRoaXMuYW5udWFsR3Jvd3RoLFxuICAgICAgICAgICAgdCA9IHRoaXMucmV0aXJlbWVudEFnZSAtIHRoaXMuY3VycmVudEFnZTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcInQ6IFwiICsgdClcbiAgICAgICAgXG4gICAgICAgIGxldCBmaW5hbFNhbGFyeSA9XG4gICAgICAgICAgICBNYXRoLnBvdygxLjAyLCB0KSAqIHRoaXMuYmFzZVNhbGFyeTtcbiAgICAgICAgbGV0IHllYXJzTmVlZGVkID0gOTAgLSB0aGlzLnJldGlyZW1lbnRBZ2U7XG5cbiAgICAgICAgY29uc29sZS5sb2coXCJSZXRpcmVtZW50IHNhbGFyeTogXCIgKyBmaW5hbFNhbGFyeSk7XG5cbiAgICAgICAgdGhpcy50b3RhbE5lZWRlZCA9IGZpbmFsU2FsYXJ5ICogdGhpcy5yZXRpcmVtZW50SW5jb21lICogeWVhcnNOZWVkZWQ7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhcIlRvdGFsIG5lZWRlZDogXCIgKyB0aGlzLnRvdGFsTmVlZGVkKTtcblxuXG4gICAgICAgIGlmICh0aGlzLnNhdmluZ3NZZXNObyA9PSAneWVzJykge1xuICAgICAgICAgIGxldCBBID0gUCAqIE1hdGgucG93KCgxKyhyLzEyKSksIDEyKnQpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiQTogXCIgKyBBKTtcbiAgICAgICAgICB0aGlzLnRvdGFsTmVlZGVkID0gdGhpcy50b3RhbE5lZWRlZCAtIEE7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJUb3RhbCBuZWVkZWQgYWRqdXN0ZWQ6IFwiICsgdGhpcy50b3RhbE5lZWRlZClcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBQTVRjYWxjX3RvcCA9IHRoaXMudG90YWxOZWVkZWQqKHIvMTIpO1xuXG4gICAgICAgIGxldCBQTVRjYWxjX2JvdHRvbSA9IE1hdGgucG93KDErKHIvMTIpLCAxMip0KSAtIDE7XG5cbiAgICAgICAgbGV0IFBNVCA9IFBNVGNhbGNfdG9wL1BNVGNhbGNfYm90dG9tO1xuXG4gICAgICAgIHRoaXMucGVyY2VudE9mU2FsYXJ5ID0gTWF0aC5yb3VuZChQTVQvKHRoaXMuYmFzZVNhbGFyeS8xMikgKiAxMDApXG5cbiAgICAgICAgUE1UID0gUE1ULnRvTG9jYWxlU3RyaW5nKHVuZGVmaW5lZCxcbiAgICAgICAgICB7J21pbmltdW1GcmFjdGlvbkRpZ2l0cyc6MCwnbWF4aW11bUZyYWN0aW9uRGlnaXRzJzowfSk7O1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiUGF5bWVudDogXCIgKyBQTVQpXG5cbiAgICAgICAgbGV0IHJlc3VsdHMgPSAnJCcgKyBQTVQ7XG5cbiAgICAgICAgZnVuY3Rpb24gYWRqdXN0Rm9yQWdlKCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucmV0aXJlbWVudEFnZSlcbiAgICAgICAgICBpZiAodGhpcy5yZXRpcmVtZW50QWdlICE9PSAnNzAnKSB7XG4gICAgICAgICAgICB0ID0gNzAgLSB0aGlzLmN1cnJlbnRBZ2U7XG4gICAgICAgICAgICB0aGlzLmFkanVzdEZvckFnZSA9IFwiJFhYWFwiO1xuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5hZGp1c3RGb3JBZ2UpXG4gICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJldGlyZW1lbnRBZ2UgPT0gJzcwJykge1xuICAgICAgICAgICAgdGhpcy5hZGp1c3RGb3JBZ2UgPSBcIkhlbGxvXCI7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFkanVzdEZvckFnZSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhZGp1c3RGb3JBZ2UoKTtcblxuICAgICAgICByZXR1cm4gcmVzdWx0cztcblxuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgLy8gZnVuY3Rpb25zIGdvIGhlcmVcbiAgICAgIGFkanVzdEZvckFnZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIHJldHVybiBcIkhlbGxvXCJcbiAgICAgICAgY29uc29sZS5sb2coXCJhZGp1c3QgZm9yIGFnZVwiKVxuICAgICAgfVxuICAgIH1cbiAgfSlcbi8vIH0sIDEwMDApIl19
